<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MessageDescription" xml:space="preserve">
    <value>Chào mừng Quý vị đến với Ngân hàng Việt Nam Thương Tín (Vietbank). Chúng tôi xin chân thành cảm ơn sự hợp tác của Quý vị trong thời gian qua cũng như sự quan tâm đến những triển vọng hợp tác cùng Vietbank trong thời gian sắp tới.</value>
  </data>
  <data name="MessageName" xml:space="preserve">
    <value>Thư ngỏ của Chủ tịch Hội đồng quản trị</value>
  </data>
  <data name="MessageUrl" xml:space="preserve">
    <value>/ve-vietbank/gioi-thieu/thu-ngo-cua-chu-tich-hoi-dong-quan-tri</value>
  </data>
  <data name="MilestonesDescription" xml:space="preserve">
    <value>Hiện nay, Vietbank đã có 95 điểm giao dịch tại khắp các vùng kinh tế trọng điểm trên toàn quốc. Đây là minh chứng cho sự phát triển nhanh, an toàn và bền vững của Vietbank trong bối cảnh hiện nay.</value>
  </data>
  <data name="MilestonesName" xml:space="preserve">
    <value>Quá trình phát triển</value>
  </data>
  <data name="MilestonesUrl" xml:space="preserve">
    <value>/ve-vietbank/gioi-thieu/qua-trinh-phat-trien</value>
  </data>
  <data name="MissionDescription" xml:space="preserve">
    <value>Không ngừng nâng cao chất lượng về mọi mặt để trở thành một trong những thương hiệu có uy tín trong lĩnh vực tài chính ngân hàng tại Việt Nam.</value>
  </data>
  <data name="MissionName" xml:space="preserve">
    <value>Tầm nhìn - Sứ mệnh - Giá trị cốt lõi</value>
  </data>
  <data name="MissionUrl" xml:space="preserve">
    <value>/ve-vietbank/gioi-thieu/tam-nhin-su-menh-gia-tri-cot-loi</value>
  </data>
  <data name="PolicyDescription" xml:space="preserve">
    <value>Bao gồm thông tin về Phòng chống rửa tiền, tuân thủ Đạo luật FATCA và Đạo luật Ái quốc Hoa Kỳ</value>
  </data>
  <data name="PolicyName" xml:space="preserve">
    <value>Chính sách tuân thủ</value>
  </data>
  <data name="PolicyUrl" xml:space="preserve">
    <value>/ve-vietbank/gioi-thieu/chinh-sach-tuan-thu</value>
  </data>
  <data name="QualityDescription" xml:space="preserve">
    <value>Xây dựng Vietbank trở thành ngân hàng bán lẻ đa năng, hiện đại, phù hợp với các chuẩn mực quốc tế, đủ khả năng để hội nhập và phát triển trong giai đoạn mới.</value>
  </data>
  <data name="QualityName" xml:space="preserve">
    <value>Chính sách chất lượng</value>
  </data>
  <data name="QualityUrl" xml:space="preserve">
    <value>/ve-vietbank/gioi-thieu/chinh-sach-chat-luong</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>Xem thêm</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Về Vietbank</value>
  </data>
</root>